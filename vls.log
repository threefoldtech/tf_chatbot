[Trace - 08:20:58] Sending notification 'window/showMessage'.
Params: {"jsonrpc":"2.0","method":"window/showMessage","params":{"type":2,"message":"VLS is a work-in-progress, pre-alpha language server. It may not be guaranteed to work reliably due to memory issues and other related factors. We encourage you to submit an issue if you encounter any problems."}}

[Trace - 08:20:58] Received request 'initialize - (0)'.
Params: {"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":47938,"clientInfo":{"name":"Visual Studio Code","version":"1.69.2"},"locale":"en-us","rootPath":"/Users/timurgordon/code/github/threefoldtech/tf_chatbot","rootUri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"changeAnnotationSupport":{"groupsOnLabel":true}},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"codeLens":{"refreshSupport":true},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"dynamicRegistration":true,"didCreate":true,"didRename":true,"didDelete":true,"willCreate":true,"willRename":true,"willDelete":true}},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]},"insertReplaceSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true},"activeParameterSupport":true},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true,"tagSupport":{"valueSet":[1]},"labelSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"disabledSupport":true,"dataSupport":true,"resolveSupport":{"properties":["edit"]},"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"honorsChangeAnnotations":false},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1,"honorsChangeAnnotations":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"formats":["relative"],"requests":{"range":true,"full":{"delta":true}},"multilineTokenSupport":false,"overlappingTokenSupport":false},"linkedEditingRange":{"dynamicRegistration":true}},"window":{"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"showDocument":{"support":true},"workDoneProgress":true},"general":{"regularExpressions":{"engine":"ECMAScript","version":"ES2020"},"markdown":{"parser":"marked","version":"1.1.0"}}},"trace":"off","workspaceFolders":[{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot","name":"tf_chatbot"}]}}

[Trace - 08:20:58] Sending notification 'window/logMessage'.
Params: {"jsonrpc":"2.0","method":"window/logMessage","params":{"type":3,"message":"VLS Version: 0.0.1.db32f99, OS: macos 64"}}

[Trace - 08:20:58] Sending notification 'window/logMessage'.
Params: {"jsonrpc":"2.0","method":"window/logMessage","params":{"type":3,"message":"VLS executable path: /Users/timurgordon/development/tools/vls/bin/vls"}}

[Trace - 08:20:58] Sending notification 'window/logMessage'.
Params: {"jsonrpc":"2.0","method":"window/logMessage","params":{"type":3,"message":"VLS build with V 365e7d6"}}

[Trace - 08:20:58] Sending notification 'window/logMessage'.
Params: {"jsonrpc":"2.0","method":"window/logMessage","params":{"type":3,"message":"Client / Editor: Visual Studio Code 1.69.2 (PID: 47938)"}}

[Trace - 08:20:58] Sending notification 'window/logMessage'.
Params: {"jsonrpc":"2.0","method":"window/logMessage","params":{"type":3,"message":"Using V path (VROOT): /Users/timurgordon/development/tools/v"}}

[Trace - 08:20:59] Sending response 'initialize - (0)' took 603ms
Result: {"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"resolveProvider":false,"triggerCharacters":["=",".",":","{",",","("," "]},"signatureHelpProvider":{"triggerCharacters":["("],"retriggerCharacters":[","," "]},"definitionProvider":true,"typeDefinitionProvider":false,"implementationProvider":true,"referencesProvider":false,"documentHightlightProvider":false,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":false,"codeLensProvider":{"resolveProvider":false},"documentFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"","moreTriggerCharacter":[]},"renameProvider":false,"documentLinkProvider":false,"colorProvider":false,"declarationProvider":false,"executeCommandProvider":"","foldingRangeProvider":true,"experimental":{}}}}

[Trace - 08:20:59] Received notification 'initialized'.
Params: {"jsonrpc":"2.0","method":"initialized","params":{}}

[Trace - 08:20:59] Received notification 'textDocument/didOpen'.
Params: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot/server/main.v","languageId":"v","version":1,"text":"module main\n\nimport net.websocket\nimport term\nimport json\nimport base64\n\n// this server accepts client connections and broadcast all messages to other connected clients\nfn main() {\n\tprintln('press ctrl-c to quit...')\n\tstart_server()?\n}\n\nfn start_server() ? {\n\tmut s := websocket.new_server(.ip6, 8081, '')\n\t// Make that in execution test time give time to execute at least one time\n\ts.ping_interval = 100\n\ts.on_connect(fn (mut s websocket.ServerClient) ?bool {\n\t\t// TODO: Check wether client info matches that of wizard\n\t\tif s.resource_name != '/' {\n\t\t\treturn false\n\t\t}\n\t\tprintln('Client has connected...')\n\t\treturn true\n\t})?\n\n\ts.on_message(fn (mut ws websocket.Client, msg &websocket.Message) ? {\n\t\tresponse := handle_message(msg)?\n\t\tws.write(response.payload, response.opcode) or { panic(err) }\n\t})\n\n\ts.on_close(fn (mut ws websocket.Client, code int, reason string) ? {\n\t\tprintln(term.green('client ($ws.id) closed connection'))\n\t})\n\ts.listen() or { println(term.red('error on server listen: $err')) }\n\tunsafe {\n\t\ts.free()\n\t}\n}\n\ntype Handler = fn ([]u8) []u8\n\nfn handle_message(msg &websocket.Message) ?&websocket.Message {\n\tprintln('Received new message: $msg.payload')\n\n\tmut payload := []u8{}\n\tif msg.payload.bytestr() == 'services' {\n\t\tpayload = handle_services(msg.payload)\n\t} else {\n\t\tpayload = handle_services(msg.payload)\n\t}\n\tresponse := websocket.Message{\n\t\topcode: msg.opcode\n\t\tpayload: payload\n\t}\n\n\treturn &response\n}\n\nstruct MCMessage {\n\tid          int\n\tservicetype string\n\tdescr       string\n\tchoices     []string\n\tmulti       bool\n\tsorted      bool\n\tsign        bool\n}\n\nfn handle_services(payload []u8) []u8 {\n\tresponse := json.encode(MCMessage{\n\t\tid: 1\n\t\tservicetype: 'question_choice'\n\t\tdescr: '# `Which` **service** *are* you [looking](https://www.google.com) for?'\n\t\tchoices: [\n\t\t\t'Ping!',\n\t\t\t'List Twins!',\n\t\t\t'Request Service!',\n\t\t\t'Is Admin!',\n\t\t\t// [Services.DEPLOY, 'Deploy!'],\n\t\t\t// [Services.BALANCE, 'Get Balance!'],\n\t\t]\n\t\tmulti: false\n\t\tsorted: false\n\t\tsign: false\n\t})\n\n\treturn response.bytes()\n}\n\nenum Services {\n\tping\n\tlist\n\tis_admin\n\tother\n}\n\ntype ServiceChoice = Services | string\n\nstruct Service {\n\tservicetype    string\n\tid             int\n\tdescr          string\n\treturntype     string\n\tregex          string\n\tregex_errormsg string\n\tmin            int\n\tmax            int\n\tchoices        []ServiceChoice\n\tmulti          bool\n\tsorted         bool\n\tsign           bool\n}\n\ninterface AskForService {\n\tlogs string\n\tservices Service\n}\n\n/*\n@SubscribeMessage('services')\n  // respond to the 'services' message with the avilable services.\n  handleServiceasEvent() {\n    return Service{servicetype:, id:, descr:, returntype:, regex:, regex_errormsg:, min:, max:, sign:}{\n      id: id++,\n      servicetype: 'question_choice',\n      descr:\n        '# `Which` **service** *are* you [looking](https://www.google.com) for?',\n      choices: [\n        [Services.PING, 'Ping!'],\n        [Services.LIST_TWINS, 'List Twins!'],\n        [Services.OTHER_SERVICES, 'Request Service!'],\n        [Services.IS_ADMIN, 'Is Admin!'],\n        // [Services.DEPLOY, 'Deploy!'],\n        // [Services.BALANCE, 'Get Balance!'],\n      ],\n      multi: false,\n      sorted: false,\n      sign: false,\n    };\n  }\n\n  @SubscribeMessage('askForService')\n  // respond for the 'askForService' with the equevilant service is asked for.\n  async handleMessageEvent(_: Socket, data: Services): Promise<AskForService> {\n    this.logger.log(`Asking for ${data} service`);\n\n    console.log({ data });\n\n    switch (data) {\n      // case Services.INIT:\n      //   this.client = new Client('wss://tfchain.dev.grid.tf', 'words');\n      //   await this.client.init();\n      //   return {\n      //     logs: data,\n      //     services: this.handleServicesEvent(),\n      //   };\n\n      case Services.PING:\n        console.log(data);\n        return {\n          logs: '### *Pong!* and another **Ping**',\n          services: this.handleServicesEvent(),\n        };\n\n      case Services.LIST_TWINS:\n        // data sent with init the client is the mnemonices.\n        const client = new Client('wss://tfchain.dev.grid.tf', data);\n        await client.init();\n\n        const twins = await client.listTwins();\n\n        return {\n          logs: twins,\n          services: this.handleServicesEvent(),\n          //   logs: 'Listing Twins',\n          //   services: {\n          //     type: 'question',\n          //     id: 10,\n          //     descr: 'Your mnemonics?',\n          //     returntype: 'string', //can be bool, string, int, uint\n          //     regex: '.*', //only relevant when string\n          //     regex_errormsg: '', //shown when regex does not match, if not specified show regex\n          //     min: 0, //only relevant when (u)int\n          //     max: 0, //only relevant when (u)int\n          //     sign: false, //if sign then the result will also return a signed field\n          //   },\n        };\n\n      case Services.OTHER_SERVICES:\n        // do something with the comming data\n        const name = data;\n        return {\n          // return logs for the logs panerl & services for what to do next in the q panel?\n          logs: name,\n          // or return another inputquestion\n          services: {\n            type: 'question',\n            id: 10,\n            descr: 'Name the service?',\n            returntype: 'string', //can be bool, string, int, uint\n            regex: '.*', //only relevant when string\n            regex_errormsg: '', //shown when regex does not match, if not specified show regex\n            min: 0, //only relevant when (u)int\n            max: 0, //only relevant when (u)int\n            sign: false, //if sign then the result will also return a signed field\n          },\n        };\n\n      case Services.IS_ADMIN:\n        const answer = data;\n        return {\n          logs: answer,\n          services: {\n            type: 'question',\n            id: 10,\n            descr: 'Are you admin?',\n            returntype: 'bool', //can be bool, string, int, uint\n            regex: '.*', //only relevant when string\n            regex_errormsg: '', //shown when regex does not match, if not specified show regex\n            min: 0, //only relevant when (u)int\n            max: 0, //only relevant when (u)int\n            sign: false, //if sign then the result will also return a signed field\n          },\n        };\n\n\n\n      // case Services.DEPLOY:\n      //   // the data here is 'deploy'\n      //   return {\n      //     logs: data,\n      //     services: {\n      //       type: 'question',\n      //       id: 11,\n      //       descr: deploymentQuestions.name,\n      //       returntype: 'bool', //can be bool, string, int, uint\n      //       regex: '.*', //only relevant when string\n      //       regex_errormsg: '', //shown when regex does not match, if not specified show regex\n      //       min: 0, //only relevant when (u)int\n      //       max: 0, //only relevant when (u)int\n      //       sign: false, //if sign then the result will also return a signed field\n      //     },\n      //   };\n\n      // case Services.BALANCE:\n      //   const twinId = data;\n\n      //   const twin = this.client.getTwin(twinId) as any;\n      //   const balance = this.client.getBalance(twin.address);\n\n      //   return {\n      //     logs: balance,\n      //     services: this.handleServicesEvent(),\n      //   };\n\n      // if you got any thing else than services go and init a chain clinet\n      default: {\n        //   /* Assume reset values for mns */\n        //   const client = new Client('wss://tfchain.dev.grid.tf', data);\n        //   await client.init();\n\n        //   // console.log({ mn: data });\n        //   return {\n        //     logs: await client.listTwins(),\n        //     services: this.handleServicesEvent(),\n        //   };\n        // }\n\n        return {\n          logs: data ? 'Authorized' : 'Not Authorized',\n          services: this.handleServicesEvent(),\n        };\n      }\n    }\n  }\n}\n*/\n"}}}

[Trace - 08:21:01] Sending notification 'textDocument/publishDiagnostics'.
Params: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot/server/main.v","diagnostics":[]}}

[Trace - 08:21:01] Received request 'textDocument/documentSymbol - (1)'.
Params: {"jsonrpc":"2.0","id":1,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot/server/main.v"}}}

[Trace - 08:21:01] Sending response 'textDocument/documentSymbol - (1)' took 1ms
Result: {"jsonrpc":"2.0","id":1,"result":[{"name":"main","kind":12,"deprecated":false,"location":{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot/server/main.v","range":{"start":{"line":8,"character":3},"end":{"line":8,"character":7}}},"containerName":""},{"name":"start_server","kind":12,"deprecated":false,"location":{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot/server/main.v","range":{"start":{"line":13,"character":3},"end":{"line":13,"character":15}}},"containerName":""},{"name":"Handler","kind":26,"deprecated":false,"location":{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot/server/main.v","range":{"start":{"line":40,"character":5},"end":{"line":40,"character":12}}},"containerName":""},{"name":"handle_message","kind":12,"deprecated":false,"location":{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot/server/main.v","range":{"start":{"line":42,"character":3},"end":{"line":42,"character":17}}},"containerName":""},{"name":"MCMessage","kind":23,"deprecated":false,"location":{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot/server/main.v","range":{"start":{"line":59,"character":7},"end":{"line":59,"character":16}}},"containerName":""},{"name":"handle_services","kind":12,"deprecated":false,"location":{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot/server/main.v","range":{"start":{"line":69,"character":3},"end":{"line":69,"character":18}}},"containerName":""},{"name":"Services","kind":10,"deprecated":false,"location":{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot/server/main.v","range":{"start":{"line":90,"character":5},"end":{"line":90,"character":13}}},"containerName":""},{"name":"Service","kind":23,"deprecated":false,"location":{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot/server/main.v","range":{"start":{"line":99,"character":7},"end":{"line":99,"character":14}}},"containerName":""},{"name":"AskForService","kind":11,"deprecated":false,"location":{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot/server/main.v","range":{"start":{"line":114,"character":10},"end":{"line":114,"character":23}}},"containerName":""}]}

[Trace - 08:21:01] Received request 'textDocument/foldingRange - (2)'.
Params: {"jsonrpc":"2.0","id":2,"method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot/server/main.v"}}}

[Trace - 08:21:01] Sending response 'textDocument/foldingRange - (2)' took 1ms
Result: {"jsonrpc":"2.0","id":2,"result":[{"startLine":2,"startCharacter":0,"endLine":5,"endCharacter":13,"kind":"imports"},{"startLine":7,"startCharacter":0,"endLine":7,"endCharacter":95,"kind":"comment"},{"startLine":8,"startCharacter":10,"endLine":11,"endCharacter":1,"kind":"region"},{"startLine":13,"startCharacter":20,"endLine":38,"endCharacter":1,"kind":"region"},{"startLine":15,"startCharacter":1,"endLine":15,"endCharacter":75,"kind":"comment"},{"startLine":17,"startCharacter":54,"endLine":24,"endCharacter":2,"kind":"region"},{"startLine":18,"startCharacter":2,"endLine":18,"endCharacter":58,"kind":"comment"},{"startLine":19,"startCharacter":28,"endLine":21,"endCharacter":3,"kind":"region"},{"startLine":26,"startCharacter":69,"endLine":29,"endCharacter":2,"kind":"region"},{"startLine":31,"startCharacter":68,"endLine":33,"endCharacter":2,"kind":"region"},{"startLine":35,"startCharacter":8,"endLine":37,"endCharacter":2,"kind":"region"},{"startLine":42,"startCharacter":62,"endLine":57,"endCharacter":1,"kind":"region"},{"startLine":45,"startCharacter":20,"endLine":45,"endCharacter":22,"kind":"region"},{"startLine":46,"startCharacter":40,"endLine":48,"endCharacter":2,"kind":"region"},{"startLine":48,"startCharacter":8,"endLine":50,"endCharacter":2,"kind":"region"},{"startLine":59,"startCharacter":17,"endLine":67,"endCharacter":1,"kind":"region"},{"startLine":69,"startCharacter":38,"endLine":88,"endCharacter":1,"kind":"region"},{"startLine":70,"startCharacter":34,"endLine":85,"endCharacter":2,"kind":"region"},{"startLine":79,"startCharacter":3,"endLine":80,"endCharacter":41,"kind":"comment"},{"startLine":90,"startCharacter":14,"endLine":95,"endCharacter":1,"kind":"region"},{"startLine":99,"startCharacter":15,"endLine":112,"endCharacter":1,"kind":"region"},{"startLine":114,"startCharacter":24,"endLine":117,"endCharacter":1,"kind":"region"},{"startLine":119,"startCharacter":0,"endLine":277,"endCharacter":2,"kind":"comment"}]}

[Trace - 08:21:01] Received request 'textDocument/codeLens - (3)'.
Params: {"jsonrpc":"2.0","id":3,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot/server/main.v"}}}

[Trace - 08:21:01] Sending response 'textDocument/codeLens - (3)' took 0ms
Result: {"jsonrpc":"2.0","id":3,"result":null}

[Trace - 08:21:01] Received notification '$/cancelRequest'.
Params: {"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1}}

[Trace - 08:21:01] Received request 'textDocument/documentSymbol - (4)'.
Params: {"jsonrpc":"2.0","id":4,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot/server/main.v"}}}

[Trace - 08:21:01] Sending response 'textDocument/documentSymbol - (4)' took 0ms
Result: {"jsonrpc":"2.0","id":4,"result":[{"name":"main","kind":12,"deprecated":false,"location":{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot/server/main.v","range":{"start":{"line":8,"character":3},"end":{"line":8,"character":7}}},"containerName":""},{"name":"start_server","kind":12,"deprecated":false,"location":{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot/server/main.v","range":{"start":{"line":13,"character":3},"end":{"line":13,"character":15}}},"containerName":""},{"name":"Handler","kind":26,"deprecated":false,"location":{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot/server/main.v","range":{"start":{"line":40,"character":5},"end":{"line":40,"character":12}}},"containerName":""},{"name":"handle_message","kind":12,"deprecated":false,"location":{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot/server/main.v","range":{"start":{"line":42,"character":3},"end":{"line":42,"character":17}}},"containerName":""},{"name":"MCMessage","kind":23,"deprecated":false,"location":{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot/server/main.v","range":{"start":{"line":59,"character":7},"end":{"line":59,"character":16}}},"containerName":""},{"name":"handle_services","kind":12,"deprecated":false,"location":{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot/server/main.v","range":{"start":{"line":69,"character":3},"end":{"line":69,"character":18}}},"containerName":""},{"name":"Services","kind":10,"deprecated":false,"location":{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot/server/main.v","range":{"start":{"line":90,"character":5},"end":{"line":90,"character":13}}},"containerName":""},{"name":"Service","kind":23,"deprecated":false,"location":{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot/server/main.v","range":{"start":{"line":99,"character":7},"end":{"line":99,"character":14}}},"containerName":""},{"name":"AskForService","kind":11,"deprecated":false,"location":{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot/server/main.v","range":{"start":{"line":114,"character":10},"end":{"line":114,"character":23}}},"containerName":""}]}

[Trace - 08:21:01] Received notification '$/cancelRequest'.
Params: {"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}

[Trace - 08:21:03] Received request 'textDocument/codeLens - (5)'.
Params: {"jsonrpc":"2.0","id":5,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot/server/main.v"}}}

[Trace - 08:21:03] Sending response 'textDocument/codeLens - (5)' took 0ms
Result: {"jsonrpc":"2.0","id":5,"result":null}

[Trace - 08:23:48] Received request 'textDocument/codeLens - (6)'.
Params: {"jsonrpc":"2.0","id":6,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot/server/main.v"}}}

[Trace - 08:23:48] Sending response 'textDocument/codeLens - (6)' took 0ms
Result: {"jsonrpc":"2.0","id":6,"result":null}

[Trace - 08:23:50] Received request 'textDocument/foldingRange - (7)'.
Params: {"jsonrpc":"2.0","id":7,"method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot/server/main.v"}}}

[Trace - 08:23:50] Sending response 'textDocument/foldingRange - (7)' took 1ms
Result: {"jsonrpc":"2.0","id":7,"result":[{"startLine":2,"startCharacter":0,"endLine":5,"endCharacter":13,"kind":"imports"},{"startLine":7,"startCharacter":0,"endLine":7,"endCharacter":95,"kind":"comment"},{"startLine":8,"startCharacter":10,"endLine":11,"endCharacter":1,"kind":"region"},{"startLine":13,"startCharacter":20,"endLine":38,"endCharacter":1,"kind":"region"},{"startLine":15,"startCharacter":1,"endLine":15,"endCharacter":75,"kind":"comment"},{"startLine":17,"startCharacter":54,"endLine":24,"endCharacter":2,"kind":"region"},{"startLine":18,"startCharacter":2,"endLine":18,"endCharacter":58,"kind":"comment"},{"startLine":19,"startCharacter":28,"endLine":21,"endCharacter":3,"kind":"region"},{"startLine":26,"startCharacter":69,"endLine":29,"endCharacter":2,"kind":"region"},{"startLine":31,"startCharacter":68,"endLine":33,"endCharacter":2,"kind":"region"},{"startLine":35,"startCharacter":8,"endLine":37,"endCharacter":2,"kind":"region"},{"startLine":42,"startCharacter":62,"endLine":57,"endCharacter":1,"kind":"region"},{"startLine":45,"startCharacter":20,"endLine":45,"endCharacter":22,"kind":"region"},{"startLine":46,"startCharacter":40,"endLine":48,"endCharacter":2,"kind":"region"},{"startLine":48,"startCharacter":8,"endLine":50,"endCharacter":2,"kind":"region"},{"startLine":59,"startCharacter":17,"endLine":67,"endCharacter":1,"kind":"region"},{"startLine":69,"startCharacter":38,"endLine":88,"endCharacter":1,"kind":"region"},{"startLine":70,"startCharacter":34,"endLine":85,"endCharacter":2,"kind":"region"},{"startLine":79,"startCharacter":3,"endLine":80,"endCharacter":41,"kind":"comment"},{"startLine":90,"startCharacter":14,"endLine":95,"endCharacter":1,"kind":"region"},{"startLine":99,"startCharacter":15,"endLine":112,"endCharacter":1,"kind":"region"},{"startLine":114,"startCharacter":24,"endLine":117,"endCharacter":1,"kind":"region"},{"startLine":119,"startCharacter":0,"endLine":277,"endCharacter":2,"kind":"comment"}]}

[Trace - 08:24:43] Received request 'textDocument/hover - (8)'.
Params: {"jsonrpc":"2.0","id":8,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot/server/main.v"},"position":{"line":77,"character":10}}}

[Trace - 08:24:43] Sending response 'textDocument/hover - (8)' took 0ms
Result: {"jsonrpc":"2.0","id":8,"result":{"contents":{"language":"v","value":"struct MCMessage"},"range":{"start":{"line":77,"character":3},"end":{"line":77,"character":21}}}}

[Trace - 08:24:52] Received request 'textDocument/hover - (9)'.
Params: {"jsonrpc":"2.0","id":9,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot/server/main.v"},"position":{"line":145,"character":47}}}

[Trace - 08:24:52] Sending response 'textDocument/hover - (9)' took 0ms
Result: {"jsonrpc":"2.0","id":9,"result":null}

[Trace - 08:45:38] Received notification '$/setTrace'.
Params: {"jsonrpc":"2.0","method":"$/setTrace","params":{"value":"off"}}

[Trace - 08:46:02] Received request 'textDocument/hover - (10)'.
Params: {"jsonrpc":"2.0","id":10,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/timurgordon/code/github/threefoldtech/tf_chatbot/server/main.v"},"position":{"line":82,"character":1}}}

[Trace - 08:46:02] Sending response 'textDocument/hover - (10)' took 0ms
Result: {"jsonrpc":"2.0","id":10,